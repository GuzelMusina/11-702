Сидиков Марсель Рафаэлевич
https://vk.com/marsel_sidikov
Вычитание чисел в компьютере:

27 - 15

1) Представляем 15 в двоичном виде
1111
2) Дополняем нулями до 1 байта
00001111
3) Получаем обратный код
11110000
4) Получаем дополнительный код
11110001 (+1)
5) Преобразуем 27 в 2-й код, и складываем с дополнительным кодом 15, получаем разность чисел.
6) Таким образом, первый бит дополнительного кода показывает отрицательное число или нет (1 - отрицаиельное, 0 - положительное)

Следовательно, если под 
int выделяется 4 байта, то значимых будет 31 бит
MAX_INT = 2^31 - 1
MIN_INT = -2^31
COUNT = 2^32
------------------------
Тип данных 
* Множество значений (например, целые числа в -2^31 до 2^31 - 1)
* Множество операций (например, +, -, *, /, %)

Теорема Бема-Якоппини
Любой алгоритм можно представить в виде трех структур управления:
1) Линейная
2) Условная
if (e) {
	b;
} else {
	c;
}
3) Циклическая
whie (e) {
	b;
}
--------------------------------------
JAVA\HelloWorld
JAVA\Task01\Program.java-.class
JAVA\Task02\Program.java-.class
--------------------------------------
1) Написали код
2) javac Program.java
3) java Program
--------------------------------------
ДЗ:
A = {a0, a1, a2 ..., aN-1}
aN-1 = -1

Посчитать произведение чисел, сумма цифр которых - четное число, и сумму чисел, оканчивающихся на 7.	

JAVA\HomeTask01\Program.java
....

Task05
1) Считать с консоли число N
2) Объявить массив N-чисел
3) Заполнить массив N-числами с консоли
4) Поменять местами минимум и максимум в массиве

https://github.com/MarselSidikov/JAVA_IT_PARK_WORK_3/wiki

1) Подпрограммы - процедуры
public static void имя(формальные_параметры) {
	// тело процедуры
} 

вызов процедуры:
имя(аргумент);

Передача аргумента в формальный параметр при вызове всегда в Java происходит по значению:

а) когда у нас аргумент и формальный параметр имеет тип - массив
public static void f(int a[]) {
	...
}
int x = new int[10];
f(x)

x - ссылка на массив в памяти.
Таким образом, при передаче x в параметр a значение x копируется (то есть копируется ссылка на массив) и тогда а тоже указывает на тот же массив.

б) когда формальный параметр и аргумент примитивных типов (int, long, short, byte, boolean, char, double, float)

public static void f(int a) {
	...
}

int x = 5;
f(x);

Значение x копируется в a, но в данном случае значением является не ссылка, а число 5. Поэтому в a попадет только число 5, исходная переменная в f не будет видна

ФУНКЦИИ
 в отличие от процедур, возвращают значение.
 public static ТИП_ВОЗВРАЩАЕМОГО_ЗНАЧЕНИЯ ИМЯ(формальные_параметры) {
 		// тело функции
 		return значение; // тип = ТИП_ВОЗВРАЩАЕМОГО_ЗНАЧЕНИЯ
 }

Вызов:
ТИП переменная = имя_функции(аргумент);

Тип переменной должен совпадать с возвращаемым типом функции.

19.09.2017

ДЗ: задачу с меню через процедуры и функции. При перезаполнении массива создать новый, в два раза больший предыдущего со всеми данными старого.




